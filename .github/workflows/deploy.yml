name: Build and Deploy Margdarshak Spring Boot Application

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/margdarshak

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE:latest .

      - name: Push Docker image to GHCR
        run: docker push $IMAGE:latest

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            IMAGE=ghcr.io/${{ github.repository_owner }}/margdarshak
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull $IMAGE:latest

            # Stop and remove existing container if it exists
            docker stop margdarshak || true && docker rm margdarshak || true
            
            # Install necessary packages
            if ! command -v aws &> /dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y python3 python3-pip jq unzip
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install
              pip3 install j2cli[yaml] --break-system-packages
              rm -rf aws awscliv2.zip
            fi

            #Export AWS env credentials
            echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            echo AWS_REGION=ap-south-1

            # Fetch secrets from AWS Secrets Manager
            mkdir -p /tmp/secrets
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            AWS_REGION=ap-south-1 \
            aws secretsmanager get-secret-value --secret-id margdarshak/secrets --query SecretString --output text > /tmp/secrets/env.json

            # Render all .j2 templates in config directory
            cd /home/ubuntu/margdarshak
            find src/main/resources -name '*.j2' | while read -r template; do
              out="${template%.j2}"
              j2 "$template" /tmp/secrets/env.json > "$out"
            done
            # Run Docker container with updated config
            docker run -d --name margdarshak -p 8080:8080 $IMAGE:latest
            echo "Deployment successful"
